name: Deploy Backend

on:
  push:
    branches:
      - Production_Backend

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Deploy to Server
      env:
        HOST: ${{ secrets.HOST }}
        USER: ${{ secrets.USER }}
        SSH_KEY: ${{ secrets.SSH_KEY }}
      run: |
        # Write SSH private key to file
        echo "${SSH_KEY}" > ssh_key
        chmod 600 ssh_key

        # Define deployment path
        DEPLOY_PATH="intellifinance/backend/"

        # Sync only the code (skip virtual env, .git, __pycache__, etc.)
        rsync -avz -e "ssh -i ssh_key -o StrictHostKeyChecking=no" \
          --exclude '.venv' --exclude 'venv' --exclude '.git' --exclude '__pycache__' \
          ./ ${USER}@${HOST}:${DEPLOY_PATH}

        # SSH and deploy
        ssh -i ssh_key -o StrictHostKeyChecking=no ${USER}@${HOST} << EOF
          set -e
          cd intellifinance/backend/
          
          # Stop the service (alias fas-stop)
          fas-stop
          
          # Stash local changes just in case
          git stash || true
          
          # Pull the latest code
          git pull
          
          # Activate virtual environment and install requirements
          source ../.server_env/bin/activate
          pip install -r requirements.txt
          
          # Start the service (alias fas-start)
          fas-start
          
          # Check the service status (alias fas-status)
          fas-status
          
          exit
        EOF

        # Clean up SSH key
        rm ssh_key
